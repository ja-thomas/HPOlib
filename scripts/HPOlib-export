#!/usr/bin/env python
# #
# wrapping: A program making it easy to use hyperparameter
# optimization software.
# Copyright (C) 2013 Katharina Eggensperger and Matthias Feurer
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

__authors__ = ["Katharina Eggensperger", "Matthias Feurer"]
__contact__ = "automl.org"


import argparse
import cPickle
import json

import numpy as np


class JSONWriter(object):
    def convert_ndarray(self, obj):
        return list(obj)

    def convert(self, obj):
        if isinstance(obj, np.ndarray):
            return self.convert_ndarray(obj)
        else:
            raise Exception

    def write(self, fh, pkl):
        fh.write(json.dumps(pkl, default=self.convert))


def main():
    parser = argparse.ArgumentParser(
        add_help="Convert an HPOlib experiment pickle into a format readable "
                 "by other programming languages.")
    parser.add_argument("input", type=str, nargs=1,
                        help="Input file; an HPOlib experiment pickle")
    parser.add_argument("output", type=str, nargs=1,
                        help="Output file: a filename in an existing directory")
    parser.add_argument("-t", "--type", type=str, nargs=1,
                        choices=['json'], default='json',
                        help="Output file type.")

    args = parser.parse_args()
    if args.type == 'json':
        writer = JSONWriter()


    with open(args.input[0]) as fh:
        experiment_pkl = cPickle.load(fh)

    output_filename = args.output[0] + '.' + args.type
    with open(output_filename, "w") as fh:
        writer.write(fh, experiment_pkl)

if __name__ == "__main__":
    main()